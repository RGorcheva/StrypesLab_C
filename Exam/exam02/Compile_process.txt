1.  gcc -E main.c -o main.i            // Preprocessor
2.  gcc -S main.i -o main.s            // Assembler
3.  gcc -c main.s -o main.o            // Object files
1.  gcc -E Book.c -o Book.i            
2.  gcc -S Book.i -o Book.s
3.  gcc -c Book.s -o Book.o
4.  gcc main.o Book.o -o exam02        // Linker to exe
5.  ./exam02                           // Execute

main.c, Book.c - сорс код с инструкции на език на високо ниво
Book.h - декларации на фyнкции и типове, код на високо ниво

1: Препроцесорна обработка
	- Текстов редактор: заменя текст, разширява сорс-кода като включва текста от header-файлове, 
	изпълнява макроси за замяна на текст, дефинира константи и заменя името им с числовата им стойност,
	условно компилиране(изключва кода, който няма да се компилира), др.
	
	gcc -E main.c -o main.i
	gcc -E Book.c -o Book.i 
	
2. Компилатор до асемблер

	- Компилаторът оптимизира кода, преобразува го в команди към .., но все още в текстов вид - четим

	gcc -S main.i -o main.s
	gcc -S Book.i -o Book.s
	
3. Компилатор до обектни файлове
	- кодът се компилира до език на ниско ниво
	
	gcc -c main.s -o main.o 
	gcc -c Book.s -o Book.o
	
4. Линкер
	- Свързват се всички object-файлове и статични библиотеки в един изпълним файл.
	
	gcc main.o Book.o -o exam02
	
5. Изпълнение на програмата

	./task2
	
	
Разлики межди статични и динамични библиотеки:
	Статичните библиотеки се свързват чрез компилиране на изходния код в обектни файлове, които след това се обединяват в библиотечен файл (.а).
	Когато се свързва програмата със статична библиотека целият код на библиотеката се копира в крайния изпълним файл. 
	Изпълнимият файл става по-голям, но е независим и може да се мести и изпълнява самостоятелно.
	Ако се направят промени в статичната библиотека, програмата трябва да се компилира отново.
	
	Динамичните библиотеки се създаеват чрез компилиране на изходния им код в споделени обектни файлове (.so).
	Когато се свърже програма с динамична библиотека, програмата препраща към споделения обектен файл, а кодът на библиотеката остава 
	отделен от изпълнимия файл - спестява памет. 
	Изпълнимия файл съдържа само препратки към библиотеката и е зависим от нея.
	Промените в библиотеката не налагат прекомпилация на програмата, но се отразяват на всички свързани програми.
	



